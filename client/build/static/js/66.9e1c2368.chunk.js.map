{"version":3,"file":"static/js/66.9e1c2368.chunk.js","mappings":"8LA+HA,UAzHc,WACZ,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAiBC,EAAAA,EAAAA,KAAjBD,aACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAS,yCAAG,WAAOC,GAAP,qFAChBA,EAAEC,iBADc,SAGEC,MAAM,SAAU,CAChCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBhB,MAAAA,EACAE,SAAAA,MAVY,cAGVe,EAHU,gBAcGA,EAAIC,OAdP,OAcVC,EAdU,OAeG,MAAfF,EAAIG,QAAmBD,GAGzBf,EAAa,CACXiB,KAAM,aACNC,QAAS,cAEXC,EAAAA,GAAAA,QAAc,sBACdjB,EAAS,MAPTiB,EAAAA,GAAAA,MAAY,wBAhBE,2CAAH,sDA2BTC,EAAU,yCAAG,WAAOf,GAAP,yFACjBA,EAAEC,iBAEFT,EADMwB,EAAO,mBAGbtB,EADMuB,EAAO,gBAJI,SAOCf,MAAM,SAAU,CAChCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBhB,MAAOyB,EACPvB,SAAUwB,MAdG,cAOXT,EAPW,iBAkBEA,EAAIC,OAlBN,QAkBXC,EAlBW,OAmBE,MAAfF,EAAIG,QAAmBD,GAGzBf,EAAa,CACXiB,KAAM,aACNC,QAAS,mBAEXC,EAAAA,GAAAA,QAAc,sBACdjB,EAAS,MAPTiB,EAAAA,GAAAA,MAAY,wBApBG,4CAAH,sDA8BhB,OACE,+BACE,gBAAKI,UAAU,YAAf,UACE,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,YAAf,UACE,qCAEF,kBAAMA,UAAU,YAAYf,OAAO,OAAnC,WACE,gBAAKe,UAAU,UAAf,UACE,kBACEN,KAAK,QACLO,YAAY,QACZD,UAAU,aACVE,KAAK,QACLC,MAAO9B,EACP+B,SAAU,SAACtB,GAAD,OAAOR,EAASQ,EAAEuB,OAAOF,QACnCG,aAAa,WAGjB,gBAAKN,UAAU,UAAf,UACE,kBACEN,KAAK,WACLO,YAAY,WACZD,UAAU,aACVE,KAAK,WACLC,MAAO5B,EACP6B,SAAU,SAACtB,GAAD,OAAON,EAAYM,EAAEuB,OAAOF,QACtCG,aAAa,cAInB,iBAAKN,UAAU,cAAf,WACE,oBAAQA,UAAU,mBAAmBO,QAASV,EAA9C,UACG,IADH,kBAIA,oBAAQG,UAAU,mBAAmBO,QAAS1B,EAA9C,UACG,IADH,YAKA,oBACEmB,UAAU,mBACVQ,MAAO,CAAEC,OAAQ,8BACjBF,QAAS,WACP5B,EAAS,cAJb,UAOG,IAPH","sources":["Components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CartState } from \"../Context/Context\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { userDispatch } = CartState();\r\n  const navigate = useNavigate();\r\n\r\n  const loginuser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (res.status === 400 || !data) {\r\n      toast.error(\"Invaid Login Details\");\r\n    } else {\r\n      userDispatch({\r\n        type: \"LOGGEDUSER\",\r\n        payload: \"AVAILABLE\",\r\n      });\r\n      toast.success(\"Login successfully\");\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const guestLogin = async (e) => {\r\n    e.preventDefault();\r\n    const Eval = \"trial@gmail.com\";\r\n    setEmail(Eval);\r\n    const Pass = \"password@123\";\r\n    setPassword(Pass);\r\n\r\n    const res = await fetch(\"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: Eval,\r\n        password: Pass,\r\n      }),\r\n    });\r\n\r\n    const data = await res.json();\r\n    if (res.status === 400 || !data) {\r\n      toast.error(\"Invaid Login Details\");\r\n    } else {\r\n      userDispatch({\r\n        type: \"LOGGEDUSER\",\r\n        payload: \"GUESTAVAILABLE\",\r\n      });\r\n      toast.success(\"Login successfully\");\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"regi_main\">\r\n        <div className=\"regi\">\r\n          <div className=\"regi_name\">\r\n            <h1>Login</h1>\r\n          </div>\r\n          <form className=\"regi_form\" method=\"POST\">\r\n            <div className=\"regi_in\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                className=\"regi_input\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n            <div className=\"regi_in\">\r\n              <input\r\n                type=\"Password\"\r\n                placeholder=\"Password\"\r\n                className=\"regi_input\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                autoComplete=\"off\"\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className=\"regi_button\">\r\n            <button className=\"regi_button_test\" onClick={guestLogin}>\r\n              {\" \"}\r\n              Guest Login\r\n            </button>\r\n            <button className=\"regi_button_main\" onClick={loginuser}>\r\n              {\" \"}\r\n              Login\r\n            </button>\r\n\r\n            <button\r\n              className=\"regi_button_main\"\r\n              style={{ border: \"4px solid rgb(30, 13, 109)\" }}\r\n              onClick={() => {\r\n                navigate(\"/register\");\r\n              }}\r\n            >\r\n              {\" \"}\r\n              Not Registered? Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["useState","email","setEmail","password","setPassword","userDispatch","CartState","navigate","useNavigate","loginuser","e","preventDefault","fetch","method","headers","body","JSON","stringify","res","json","data","status","type","payload","toast","guestLogin","Eval","Pass","className","placeholder","name","value","onChange","target","autoComplete","onClick","style","border"],"sourceRoot":""}